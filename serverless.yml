service: data-import-app

useDotenv: true

provider:
  name: aws
  runtime: nodejs22.x
  region: us-east-1
  memorySize: 256
  timeout: 10
  stage: ${opt:stage, 'local'}
  role: arn:aws:iam::046488310186:role/data-import-nest
  environment: ${file(env.${self:provider.stage}.json)}
  vpc:
    securityGroupIds:
      - sg-054c59e100a3c55a3
    subnetIds:
      - subnet-0ca26cef48ff5f000
      - subnet-08fb3a8fefd37360a

functions:
  users:
    handler: dist/src/functions/users/handler.main
    description: "serverless offline example"
    environment:
      STAGE: ${self:provider.stage}
    package:
      individually: true
      include:
        - src/functions/users/handler.js
      exclude:
        - src/**
    events:
      - http:
          path: /
          method: ANY
      - http:
          method: ANY
          path: /{proxy+}

  migration:
    handler: dist/src/functions/migration/handler.main
    timeout: 60
    environment:
      STAGE: ${self:provider.stage}
    package:
      individually: true
      include:
        - src/functions/migration/handler.js
        - migrations/**
      exclude:
        - src/**
        - node_modules/luxon
        - node_modules/multer
        - node_modules/class-transformer
        - node_modules/class-validator
        - node_modules/aws-serverless-express
        - node_modules/aws-lambda
        - node_modules/@vendia/serverless-express
        - node_modules/@opensearch-project/opensearch

plugins:
  - serverless-offline
  - serverless-offline-watcher

custom:
  esbuild:
    bundle: true
    minify: true
    sourcemap: true
    platform: node
    target: node22

  serverless-offline:
    httpPort: 3000

  serverless-offline-watcher:
    - path: dist/src/**/**
      command:
        - 'npm run watch'
      hook:
        - offline:functionsUpdated

package:
  individually: true
